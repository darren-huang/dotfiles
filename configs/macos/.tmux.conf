#########################
### Shortcut Commands ###
#########################

# prefix for commands
set-option -g prefix M-a
set-option -g prefix2 C-b
bind-key C-a send-prefix

# split panes using | and -
bind -n M-d split-window -v -c '#{pane_current_path}' # new window (d)ownwards
bind -n M-r split-window -h -c '#{pane_current_path}' # new window to the (r)ight
unbind '"'
unbind %

# switching panes (no-prefix)
bind -n M-h select-pane -L
bind -n M-l select-pane -R
bind -n M-k select-pane -U
bind -n M-j select-pane -D

# resize pane (no-prefix)
bind -n M-H resize-pane -L 2
bind -n M-L resize-pane -R 2
bind -n M-K resize-pane -U
bind -n M-J resize-pane -D
bind -n C-Left resize-pane -L 2
bind -n C-Right resize-pane -R 2
bind -n C-Up resize-pane -U
bind -n C-Down resize-pane -D

# creating new windows
bind -n M-c new-window -c '#{pane_current_path}'
bind -n M-t new-window -c '#{pane_current_path}'

# close windows
bind -n M-x confirm-before -p "kill-pane #P? (y/n)" kill-pane

# switching between windows
bind -n M-b previous-window
bind -n M-n next-window
bind -n M-p last-window

# Start windows and panes at 1
set -g base-index 1
setw -g pane-base-index 1

# Switch between windows (fast)
bind-key -n M-0 select-window -t :0
bind-key -n M-1 select-window -t :1
bind-key -n M-2 select-window -t :2
bind-key -n M-3 select-window -t :3
bind-key -n M-4 select-window -t :4
bind-key -n M-5 select-window -t :5
bind-key -n M-6 select-window -t :6
bind-key -n M-7 select-window -t :7
bind-key -n M-8 select-window -t :8
bind-key -n M-9 select-window -t :9

# Enable mouse mode (tmux 2.1 and above)
set -g mouse on

# reload config file (change file location to your the tmux.conf you want to use)
bind r source-file ~/.tmux.conf

# Fix escape key lag in vim
set -sg escape-time 0

######################
### DESIGN CHANGES ###
######################

# statusbar
set -g status-position top
# set -g status-justify bottom
set -g status-style bg='#44475a',fg='#bd93f9'
set -g mode-style bg='#f1fa8c',fg='#282a36'
set -g status-interval 1

# status left
# are we controlling tmux or the content of the panes?
set -g status-left '#[bg=#f8f8f2]#[fg=#282a36]#{?client_prefix,#[bg=#50fa7b],} ☺ '

# are we zoomed into a pane?
set -ga status-left '#[bg=#44475a]#[fg=#ff79c6] #{?window_zoomed_flag, ↕  ,   }'

# window status
set-window-option -g window-status-style fg='#bd93f9',bg=default
set-window-option -g window-status-current-style fg='#ff79c6',bg='#282a36'

set -g window-status-current-format "#[fg=#44475a]#[bg=#bd93f9]#[fg=#f8f8f2]#[bg=#bd93f9] #I #W #[fg=#bd93f9]#[bg=#44475a]"
set -g window-status-format "#[fg=#f8f8f2]#[bg=#44475a]#I #W #[fg=#44475a] "

# status right
# set -g status-right '#[fg=#8be9fd,bg=#44475a]#[fg=#44475a,bg=#8be9fd] #(tmux-mem-cpu-load -g 5 --interval 2) '
# set -g status-right '#[fg=#ff79c6,bg=#8be9fd]#[fg=#44475a,bg=#ff79c6] #(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") '
set -g status-right '#[fg=#bd93f9,bg=#44475a]#[fg=#f8f8f2,bg=#bd93f9] %a %H:%M:%S #[fg=#6272a4]%Y-%m-%d '

set -g terminal-overrides 'rxvt-unicode*:sitm@,ritm@'

############################
### mouse copy and paste ###
############################

# Linux only
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M
bind -T copy-mode-vi    C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-vi    C-WheelDownPane send-keys -X halfpage-down
bind -T copy-mode-emacs C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-emacs C-WheelDownPane send-keys -X halfpage-down

# To copy, left click and drag to highlight text in yellow, 
# once you release left click yellow text will disappear and will automatically be available in clibboard
# # Use vim keybindings in copy mode
setw -g mode-keys vi
# Update default binding of `Ctrl-Shift-C` to also use copy-pipe
unbind -T copy-mode-vi C-C
bind-key -T copy-mode-vi C-C send-keys -X copy-pipe-and-cancel 'clip.exe'
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'clip.exe'

#########################
### VSCODE
#########################
# update VSCODE variables from integrated terminal so that `code` command opens in current window
#set-option -ga update-environment ' VSCODE_GIT_ASKPASS_NODE VSCODE_GIT_ASKPASS_MAIN VSCODE_IPC_HOOK_CLI PATH GIT_ASKPASS'

### color combatibility ------------------------------------------------------------------------------------------
# Should be same (screen-256color may work too), add :Tc to enable truecolor support
set -g default-terminal "xterm-256color"
#set -g  default-terminal "tmux-256color"
set -ga terminal-overrides ",*256col*:Tc"

# copy stuff
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'clip.exe'
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'clip.exe'
set -g mouse on

